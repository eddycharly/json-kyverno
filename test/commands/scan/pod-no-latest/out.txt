Loading policies ...
Loading payload ...
Pre processing ...
Running ( evaluating 1 resource against 1 policy ) ...
- test / pod-no-latest / webserver FAILED
 -> all[0].check.spec.(containers)->foos.~foo.containers[0].(at($foos, $foo).image)->foo.(ends_with($foo, $tag)): Invalid value: true: Expected value: false
 -> all[0].check.spec.(containers)->foos.~foo.containers[1].(at($foos, $foo).image)->foo.(ends_with($foo, $tag)): Invalid value: true: Expected value: false
 -> all[0].check.spec.(containers)->foos.~foo.containers[2].(at($foos, $foo).image)->foo.(ends_with($foo, $tag)): Invalid value: true: Expected value: false
 -> all[1].check.spec.(containers)->foo.~.containers[0].image.(ends_with(@, ':latest')): Invalid value: true: Expected value: false
 -> all[1].check.spec.(containers)->foo.~.containers[1].image.(ends_with(@, ':latest')): Invalid value: true: Expected value: false
 -> all[1].check.spec.(containers)->foo.~.containers[2].image.(ends_with(@, ':latest')): Invalid value: true: Expected value: false
 -> all[2].check.(spec.containers[*].image)->images.~index.(spec.containers[*].image)[0].(ends_with(@, ':latest')): Invalid value: true: Expected value: false
 -> all[2].check.(spec.containers[*].image)->images.~index.(spec.containers[*].image)[1].(ends_with(@, ':latest')): Invalid value: true: Expected value: false
 -> all[2].check.(spec.containers[*].image)->images.~index.(spec.containers[*].image)[2].(ends_with(@, ':latest')): Invalid value: true: Expected value: false
Done
